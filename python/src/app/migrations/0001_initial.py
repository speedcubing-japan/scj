# Generated by Django 2.2.12 on 2020-11-13 06:05

import app.models.frontend
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_mysql.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', app.models.frontend.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AverageRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_id', models.IntegerField(verbose_name='競技者ID')),
                ('event_id', models.SmallIntegerField(choices=[(1, '3x3x3'), (2, '2x2x2'), (3, '4x4x4'), (4, '5x5x5'), (5, '6x6x6'), (6, '7x7x7'), (7, '3x3x3 BLD'), (8, '3x3x3 FMC'), (9, '3x3 One-Handed'), (10, 'クロック'), (11, 'メガミンクス'), (12, 'ピラミンクス'), (13, 'スキューブ'), (14, 'スクエア1'), (15, '4x4x4 BLD'), (16, '5x5x5 BLD'), (17, 'MBLD')], verbose_name='イベントID')),
                ('competition_id', models.IntegerField(verbose_name='大会ID')),
                ('best', models.FloatField(verbose_name='Best')),
                ('national_rank', models.IntegerField(verbose_name='国内ランク')),
                ('prefecture_rank', models.IntegerField(verbose_name='都道府県内ランク')),
            ],
        ),
        migrations.CreateModel(
            name='BestRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_id', models.IntegerField(verbose_name='競技者ID')),
                ('event_id', models.SmallIntegerField(choices=[(1, '3x3x3'), (2, '2x2x2'), (3, '4x4x4'), (4, '5x5x5'), (5, '6x6x6'), (6, '7x7x7'), (7, '3x3x3 BLD'), (8, '3x3x3 FMC'), (9, '3x3 One-Handed'), (10, 'クロック'), (11, 'メガミンクス'), (12, 'ピラミンクス'), (13, 'スキューブ'), (14, 'スクエア1'), (15, '4x4x4 BLD'), (16, '5x5x5 BLD'), (17, 'MBLD')], verbose_name='イベントID')),
                ('competition_id', models.IntegerField(verbose_name='大会ID')),
                ('best', models.FloatField(verbose_name='Best')),
                ('national_rank', models.IntegerField(verbose_name='国内ランク')),
                ('prefecture_rank', models.IntegerField(verbose_name='都道府県内ランク')),
            ],
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='大会ID')),
                ('name', models.CharField(max_length=64, verbose_name='大会名')),
                ('name_id', models.CharField(db_index=True, max_length=64, verbose_name='大会名ID')),
                ('open_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='開始日')),
                ('close_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='終了日')),
                ('registration_open_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='申し込み開始日時')),
                ('registration_close_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='申し込み終了日時')),
                ('judge_person_ids', django_mysql.models.JSONField(default=dict, verbose_name='審判員ID')),
                ('event_ids', django_mysql.models.JSONField(default=dict, verbose_name='イベントID')),
                ('prefecture_id', models.SmallIntegerField(choices=[(1, '北海道'), (2, '青森県'), (3, '岩手県'), (4, '宮城県'), (5, '秋田県'), (6, '山形県'), (7, '福島県'), (8, '茨城県'), (9, '栃木県'), (10, '群馬県'), (11, '埼玉県'), (12, '千葉県'), (13, '東京都'), (14, '神奈川県'), (15, '新潟県'), (16, '富山県'), (17, '石川県'), (18, '福井県'), (19, '山梨県'), (20, '長野県'), (21, '岐阜県'), (22, '静岡県'), (23, '愛知県'), (24, '三重県'), (25, '滋賀県'), (26, '京都府'), (27, '大阪府'), (28, '兵庫県'), (29, '奈良県'), (30, '和歌山県'), (31, '鳥取県'), (32, '島根県'), (33, '岡山県'), (34, '広島県'), (35, '山口県'), (36, '徳島県'), (37, '香川県'), (38, '愛媛県'), (39, '高知県'), (40, '福岡県'), (41, '佐賀県'), (42, '長崎県'), (43, '熊本県'), (44, '大分県'), (45, '宮崎県'), (46, '鹿児島'), (47, '沖縄県'), (48, '海外')], verbose_name='都道府県ID')),
                ('organizer_person_ids', django_mysql.models.JSONField(default=dict, verbose_name='主催者SCJID')),
                ('venue_name', models.CharField(max_length=256, verbose_name='開催地名')),
                ('venue_address', models.CharField(max_length=256, verbose_name='開催地住所')),
                ('latitude', models.FloatField(verbose_name='開催地緯度')),
                ('longitude', models.FloatField(verbose_name='開催地経度')),
                ('limit', models.IntegerField(verbose_name='制限人数')),
                ('fee', models.IntegerField(verbose_name='参加費')),
                ('guest_limit', models.SmallIntegerField(verbose_name='ゲスト最大人数')),
                ('description_ja', models.TextField(verbose_name='大会説明(日本語)')),
                ('description_en', models.TextField(verbose_name='大会説明(英語)')),
                ('requirement_ja', models.TextField(verbose_name='参加要件(日本語)')),
                ('requirement_en', models.TextField(verbose_name='参加要件(英語)')),
                ('is_cancel', models.BooleanField(default=False, verbose_name='キャンセル可否')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=64, verbose_name='名')),
                ('last_name', models.CharField(max_length=64, verbose_name='性')),
                ('first_name_kana', models.CharField(max_length=64, verbose_name='メイ')),
                ('last_name_kana', models.CharField(max_length=64, verbose_name='セイ')),
                ('first_name_roma', models.CharField(max_length=64, verbose_name='名(ローマ字)')),
                ('last_name_roma', models.CharField(max_length=64, verbose_name='姓(ローマ字)')),
                ('gender', models.SmallIntegerField(choices=[(1, '男性'), (2, '女性')], verbose_name='性別')),
                ('birth_at', models.DateField(verbose_name='生年月日')),
                ('prefecture_id', models.SmallIntegerField(choices=[(1, '北海道'), (2, '青森県'), (3, '岩手県'), (4, '宮城県'), (5, '秋田県'), (6, '山形県'), (7, '福島県'), (8, '茨城県'), (9, '栃木県'), (10, '群馬県'), (11, '埼玉県'), (12, '千葉県'), (13, '東京都'), (14, '神奈川県'), (15, '新潟県'), (16, '富山県'), (17, '石川県'), (18, '福井県'), (19, '山梨県'), (20, '長野県'), (21, '岐阜県'), (22, '静岡県'), (23, '愛知県'), (24, '三重県'), (25, '滋賀県'), (26, '京都府'), (27, '大阪府'), (28, '兵庫県'), (29, '奈良県'), (30, '和歌山県'), (31, '鳥取県'), (32, '島根県'), (33, '岡山県'), (34, '広島県'), (35, '山口県'), (36, '徳島県'), (37, '香川県'), (38, '愛媛県'), (39, '高知県'), (40, '福岡県'), (41, '佐賀県'), (42, '長崎県'), (43, '熊本県'), (44, '大分県'), (45, '宮崎県'), (46, '鹿児島'), (47, '沖縄県'), (48, '海外')], verbose_name='都道府県')),
                ('wca_id', models.CharField(max_length=10, verbose_name='WCAID')),
                ('wca_access_token', models.CharField(max_length=256, verbose_name='アクセストークン')),
                ('wca_refresh_token', models.CharField(max_length=256, verbose_name='リフレッシュトークン')),
                ('wca_avatar_url', models.CharField(max_length=256, verbose_name='アバター')),
                ('wca_avatar_thumb_url', models.CharField(max_length=256, verbose_name='アバターサムネイル')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='ラウンドID')),
                ('competition_id', models.IntegerField(verbose_name='大会ID')),
                ('event_id', models.SmallIntegerField(choices=[(1, '3x3x3'), (2, '2x2x2'), (3, '4x4x4'), (4, '5x5x5'), (5, '6x6x6'), (6, '7x7x7'), (7, '3x3x3 BLD'), (8, '3x3x3 FMC'), (9, '3x3 One-Handed'), (10, 'クロック'), (11, 'メガミンクス'), (12, 'ピラミンクス'), (13, 'スキューブ'), (14, 'スクエア1'), (15, '4x4x4 BLD'), (16, '5x5x5 BLD'), (17, 'MBLD')], verbose_name='イベントID')),
                ('type', models.SmallIntegerField(choices=[(1, '予選'), (2, '2次予選'), (3, '準決勝'), (4, '決勝')], verbose_name='ラウンドタイプ')),
                ('format_id', models.IntegerField(choices=[(1, 'Best of 1'), (2, 'Best of 2'), (3, 'Best of 3'), (4, 'Average of 5'), (5, 'Mean of 3')], verbose_name='フォーマットID')),
                ('limit_time', models.IntegerField(verbose_name='制限時間')),
                ('cutoff_time', models.IntegerField(verbose_name='カットオフ時間')),
                ('proceed_count', models.IntegerField(verbose_name='通過人数')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competition_id', models.IntegerField(db_index=True, verbose_name='大会ID')),
                ('event_id', models.SmallIntegerField(choices=[(1, '3x3x3'), (2, '2x2x2'), (3, '4x4x4'), (4, '5x5x5'), (5, '6x6x6'), (6, '7x7x7'), (7, '3x3x3 BLD'), (8, '3x3x3 FMC'), (9, '3x3 One-Handed'), (10, 'クロック'), (11, 'メガミンクス'), (12, 'ピラミンクス'), (13, 'スキューブ'), (14, 'スクエア1'), (15, '4x4x4 BLD'), (16, '5x5x5 BLD'), (17, 'MBLD')], verbose_name='イベントID')),
                ('person_id', models.IntegerField(verbose_name='競技者ID')),
                ('rank', models.SmallIntegerField(verbose_name='順位')),
                ('best', models.FloatField(verbose_name='Best')),
                ('average', models.FloatField(verbose_name='Average')),
                ('value1', models.FloatField(verbose_name='値1')),
                ('value2', models.FloatField(verbose_name='値2')),
                ('value3', models.FloatField(verbose_name='値3')),
                ('value4', models.FloatField(verbose_name='値4')),
                ('value5', models.FloatField(verbose_name='値5')),
                ('regional_best_id', models.SmallIntegerField(choices=[(1, 'PR'), (2, 'NR')], verbose_name='単発タイトル記録ID')),
                ('regional_average_id', models.SmallIntegerField(choices=[(1, 'PR'), (2, 'NR')], verbose_name='平均タイトル記録ID')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Round')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'WCA大会'), (2, 'SCJ大会'), (3, 'イベント'), (4, 'お知らせ')], verbose_name='種類')),
                ('title', models.CharField(max_length=24, verbose_name='タイトル')),
                ('text', models.TextField(verbose_name='本文')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Person')),
            ],
        ),
        migrations.CreateModel(
            name='Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'WCA大会'), (2, 'SCJ大会'), (3, 'イベント'), (4, 'お知らせ')], verbose_name='種類')),
                ('title', models.CharField(max_length=24, verbose_name='タイトル')),
                ('text', models.TextField(verbose_name='本文')),
                ('is_public', models.BooleanField(default=False, verbose_name='公開可否')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Person')),
            ],
        ),
        migrations.CreateModel(
            name='Competitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competition_id', models.IntegerField(verbose_name='大会ID')),
                ('status', models.SmallIntegerField(choices=[(1, '未承認'), (2, '承認')], verbose_name='状態')),
                ('event_ids', django_mysql.models.JSONField(default=dict, verbose_name='申し込み種目ID')),
                ('guest_count', models.SmallIntegerField(verbose_name='見学者数')),
                ('comment', models.TextField(verbose_name='コメント')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Person')),
            ],
        ),
    ]
